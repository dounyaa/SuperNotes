@startuml
interface Note {
    +getContent(): String
    +setContent(content: String): void
}

class TextNote {
    -content: String
    -tag: String
    +getContent(): String
    +setContent(content: String): void
    +getTag(): String
    +setTag(tag: String): void
}

class ImageNote {
    -content: byte[]
    -tag: String
    +getContent(): byte[]
    +setContent(content: byte[]): void
    +getTag(): String
    +setTag(tag: String): void
}

interface NoteFactory {
    +createNote(): Note
}

class TextNoteFactory {
    +createNote(): Note
}

class ImageNoteFactory {
    +createNote(): Note
}

interface INoteManager {
    +addNote(Note: note): void
    +deleteByTag(Strin: tag): void
}

class NoteManager implements INoteManager {
    +addNote(Note: note): void
    +deleteByTag(Strin: tag): void
}

interface FileHandler {
    +exportPdfFile(String: filePath): void 
    +exportPdfFileUsingFilter(String: filePath, String: filter): void
}

class FileManager implements FileHandler {
    +exportPdfFile(String: filePath): void 
    +exportPdfFileUsingFilter(String: filePath, String: filter): void
    +exportPdf(String: filePath, List<Note>: result): void
}

class DriveQuickstart {
  -APPLICATION_NAME: String
  -JSON_FACTORY: JsonFactory
  -TOKENS_DIRECTORY_PATH: String
  -SCOPES: List<String>
  -CREDENTIALS_FILE_PATH: String
  +getCredentials(HTTP_TRANSPORT: NetHttpTransport): Credential
  +uploadFile(filePath1: String, result: List<Note>): boolean
}

class CommandLineInterface {
    +parseCommand(command: String): void
}

interface DBManager {
    +createNotesTable(): void
    +addTextNote(content: String, tag: String): void
    +addImageNote(imageBytes: byte[], tag: String): void
    +deleteNoteByTag(tag: String): void
    +getAllNotes(): ArrayList<Note> 
    +getAllNotesByTag(tag: String): ArrayList<Note> 
    +getAllNotesLike(contentMotif: String): ArrayList<Note> 
}

class SQLiteDBManager implements DBManager {
    +createNotesTable(): void
    +addTextNote(content: String, tag: String): void
    +addImageNote(imageBytes: byte[], tag: String): void
    +deleteNoteByTag(tag: String): void
    +getAllNotes(): ArrayList<Note>
    +getAllNotesByTag(tag: String): ArrayList<Note>
    +getAllNotesLike(contentMotif: String): ArrayList<Note>
    +connect(): void
    +getConnection(): void
}

Note <|.. TextNote
Note <|.. ImageNote

NoteFactory <|.. TextNoteFactory
NoteFactory <|.. ImageNoteFactory
FileManager ..> DBManager
NoteManager ..> DBManager

NoteFactory ..> Note : creates
NoteManager ..> Note : manages
FileHandler ..> Note : handles

CommandLineInterface ..> NoteManager : sendsCommands
FileManager ..> DriveQuickstart: uses

@enduml

